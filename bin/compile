#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# Fail immediately on non-zero exit code.
set -e
# Fail immediately on non-zero exit code within a pipeline.
set -o pipefail
# Fail on undeclared variables.
set -u
# Debug, echo every command
#set -x

function error() {
  echo " !     $*" >&2
  exit 1
}

function topic() {
  echo "-----> $*"
}

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

# parse and derive params
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3


echo_env_vars() {
  local env_dir=$1
  local whitelist_regex=${2:-''}
  local blacklist_regex=${3:-'^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH)$'}
  if [ -d "$env_dir" ]; then
    for e in $(ls $env_dir); do
      echo "$e" | grep -E "$whitelist_regex" | grep -qvE "$blacklist_regex" &&
      echo "$e=$(cat $env_dir/$e)"
      :
    done
  fi
}

topic "Environment variables"
echo_env_vars "$ENV_DIR" | indent

topic "Cancelling build"
exit 1
